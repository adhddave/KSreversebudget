```html
<!DOCTYPE html>
<html>
<head>
    <title>ADHD-Friendly Reverse Budget Calculator</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
            line-height: 1.6;
        }
        h1, h2, h3 {
            color: #4169E1;
        }
        .container {
            background-color: #f9f9f9;
            padding: 20px;
            border-radius: 10px;
            margin-bottom: 20px;
            border: 1px solid #ddd;
        }
        table {
            width: 100%;
            border-collapse: collapse;
            margin-bottom: 20px;
        }
        th, td {
            padding: 8px;
            text-align: left;
            border-bottom: 1px solid #ddd;
        }
        input, select {
            padding: 8px;
            width: 90%;
        }
        button {
            background-color: #4169E1;
            color: white;
            padding: 10px 15px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 16px;
            margin-top: 10px;
        }
        button:hover {
            background-color: #3557c0;
        }
        .result {
            font-weight: bold;
            font-size: 18px;
            background-color: #e0f0ff;
            padding: 10px;
            border-radius: 5px;
            margin-top: 10px;
        }
        .add-row {
            background-color: #32CD32;
        }
        .add-row:hover {
            background-color: #2db82d;
        }
        .remove-row {
            background-color: #FF6347;
            margin-left: 5px;
        }
        .remove-row:hover {
            background-color: #e05a42;
        }
        .flow-diagram {
            display: flex;
            justify-content: space-between;
            margin: 20px 0;
            text-align: center;
        }
        .flow-box {
            background-color: #e0f0ff;
            padding: 15px;
            border-radius: 5px;
            width: 22%;
            position: relative;
        }
        .flow-arrow {
            position: absolute;
            right: -15px;
            top: 50%;
            font-size: 24px;
        }
        .hidden {
            display: none;
        }
    </style>
</head>
<body>
    <h1>ADHD-Friendly Reverse Budget Calculator</h1>
    <p>This calculator helps you implement the three-bucket system: Goals, Fixed Expenses, and Spending Money.</p>
    
    <div class="container">
        <h2>Income Information</h2>
        <label for="monthlyIncome">Monthly Take-Home Pay: $</label>
        <input type="number" id="monthlyIncome" min="0" step="0.01" placeholder="Your monthly income after taxes">
        
        <label for="payFrequency">Pay Frequency:</label>
        <select id="payFrequency">
            <option value="weekly">Weekly (52 paychecks/year)</option>
            <option value="biweekly">Bi-weekly (26 paychecks/year)</option>
            <option value="semimonthly">Semi-monthly (24 paychecks/year)</option>
            <option value="monthly">Monthly (12 paychecks/year)</option>
        </select>
    </div>
    
    <div class="container">
        <h2>Bucket 1: Goals</h2>
        <table id="goalsTable">
            <tr>
                <th>Goal</th>
                <th>Monthly Contribution ($)</th>
                <th>Notes</th>
                <th>Actions</th>
            </tr>
            <tr>
                <td><input type="text" class="goalName" placeholder="Savings, Debt Payoff, etc."></td>
                <td><input type="number" class="goalAmount" min="0" step="0.01" placeholder="0.00"></td>
                <td><input type="text" class="goalNotes" placeholder="Optional notes"></td>
                <td><button class="remove-row">Remove</button></td>
            </tr>
        </table>
        <button class="add-row" onclick="addGoalRow()">Add Goal</button>
        <div class="result">
            Total Monthly Goal Funding: $<span id="totalGoals">0.00</span>
        </div>
    </div>
    
    <div class="container">
        <h2>Bucket 2: Fixed/Recurring Expenses</h2>
        <h3>Monthly Bills & Subscriptions</h3>
        <table id="monthlyBillsTable">
            <tr>
                <th>Bill/Subscription</th>
                <th>Amount ($)</th>
                <th>Payment Method</th>
                <th>Notes</th>
                <th>Actions</th>
            </tr>
            <tr>
                <td><input type="text" class="billName" placeholder="Rent, Netflix, etc."></td>
                <td><input type="number" class="billAmount" min="0" step="0.01" placeholder="0.00"></td>
                <td><input type="text" class="billMethod" placeholder="Auto-pay, Check, etc."></td>
                <td><input type="text" class="billNotes" placeholder="Optional notes"></td>
                <td><button class="remove-row">Remove</button></td>
            </tr>
        </table>
        <button class="add-row" onclick="addBillRow()">Add Monthly Bill</button>
        <div class="result">
            Total Monthly Bills: $<span id="totalMonthlyBills">0.00</span>
        </div>
        
        <h3>Non-Monthly Expenses</h3>
        <table id="nonMonthlyTable">
            <tr>
                <th>Expense</th>
                <th>Cycle</th>
                <th>Total Bill ($)</th>
                <th>Monthly Equivalent ($)</th>
                <th>Actions</th>
            </tr>
            <tr>
                <td><input type="text" class="nonMonthlyName" placeholder="Car Insurance, etc."></td>
                <td>
                    <select class="nonMonthlyCycle">
                        <option value="3">Quarterly (every 3 months)</option>
                        <option value="6">Semi-annually (every 6 months)</option>
                        <option value="12">Annually (once a year)</option>
                        <option value="custom">Custom</option>
                    </select>
                    <input type="number" class="customCycle hidden" min="2" placeholder="# of months">
                </td>
                <td><input type="number" class="nonMonthlyAmount" min="0" step="0.01" placeholder="0.00"></td>
                <td class="monthlyEquivalent">$0.00</td>
                <td><button class="remove-row">Remove</button></td>
            </tr>
        </table>
        <button class="add-row" onclick="addNonMonthlyRow()">Add Non-Monthly Expense</button>
        <div class="result">
            Total Non-Monthly (Monthly Equivalent): $<span id="totalNonMonthly">0.00</span>
        </div>
        
        <div class="result">
            Total Fixed/Recurring Bucket: $<span id="totalFixed">0.00</span>
        </div>
    </div>
    
    <div class="container">
        <h2>Bucket 3: Spending Money</h2>
        <div class="flow-diagram">
            <div class="flow-box">
                Monthly Income
                <br>$<span id="flowIncome">0.00</span>
                <span class="flow-arrow">→</span>
            </div>
            <div class="flow-box">
                Goal Bucket
                <br>$<span id="flowGoals">0.00</span>
                <span class="flow-arrow">→</span>
            </div>
            <div class="flow-box">
                Fixed/Recurring
                <br>$<span id="flowFixed">0.00</span>
                <span class="flow-arrow">→</span>
            </div>
            <div class="flow-box">
                Spending Bucket
                <br>$<span id="flowSpending">0.00</span>
            </div>
        </div>
        <div class="result">
            Monthly Spending Money: $<span id="spendingBucket">0.00</span>
        </div>
    </div>
    
    <div class="container">
        <h2>Per-Paycheck Breakdown</h2>
        <div class="result">
            <p>Per Paycheck Take-Home Pay: $<span id="perPaycheckIncome">0.00</span></p>
            <p>Per Paycheck Goal Funding: $<span id="perPaycheckGoals">0.00</span></p>
            <p>Per Paycheck Fixed/Recurring: $<span id="perPaycheckFixed">0.00</span></p>
            <p>Per Paycheck Spending Bucket: $<span id="perPaycheckSpending">0.00</span></p>
        </div>
    </div>
    
    <button onclick="calculateBudget()">Calculate Budget</button>
    <button onclick="printResults()">Print Results</button>
    
    <script>
        // Add event listeners to handle calculation when inputs change
        document.addEventListener('DOMContentLoaded', function() {
            document.querySelectorAll('input, select').forEach(input => {
                input.addEventListener('change', calculateBudget);
            });
            
            // Add event listeners for remove buttons
            setupRemoveButtons();
            
            // Handle custom cycle inputs
            document.querySelectorAll('.nonMonthlyCycle').forEach(select => {
                select.addEventListener('change', function() {
                    const customCycleInput = this.parentNode.querySelector('.customCycle');
                    if (this.value === 'custom') {
                        customCycleInput.classList.remove('hidden');
                    } else {
                        customCycleInput.classList.add('hidden');
                    }
                    calculateBudget();
                });
            });
        });
        
        function setupRemoveButtons() {
            document.querySelectorAll('.remove-row').forEach(button => {
                button.addEventListener('click', function() {
                    const row = this.parentNode.parentNode;
                    const table = row.parentNode;
                    
                    // Don't remove if it's the only row
                    if (table.rows.length > 2) {
                        table.removeChild(row);
                        calculateBudget();
                    }
                });
            });
        }
        
        function addGoalRow() {
            const table = document.getElementById('goalsTable');
            const newRow = table.insertRow(-1);
            
            newRow.innerHTML = `
                <td><input type="text" class="goalName" placeholder="Savings, Debt Payoff, etc."></td>
                <td><input type="number" class="goalAmount" min="0" step="0.01" placeholder="0.00"></td>
                <td><input type="text" class="goalNotes" placeholder="Optional notes"></td>
                <td><button class="remove-row">Remove</button></td>
            `;
            
            setupRemoveButtons();
            newRow.querySelectorAll('input').forEach(input => {
                input.addEventListener('change', calculateBudget);
            });
        }
        
        function addBillRow() {
            const table = document.getElementById('monthlyBillsTable');
            const newRow = table.insertRow(-1);
            
            newRow.innerHTML = `
                <td><input type="text" class="billName" placeholder="Rent, Netflix, etc."></td>
                <td><input type="number" class="billAmount" min="0" step="0.01" placeholder="0.00"></td>
                <td><input type="text" class="billMethod" placeholder="Auto-pay, Check, etc."></td>
                <td><input type="text" class="billNotes" placeholder="Optional notes"></td>
                <td><button class="remove-row">Remove</button></td>
            `;
            
            setupRemoveButtons();
            newRow.querySelectorAll('input').forEach(input => {
                input.addEventListener('change', calculateBudget);
            });
        }
        
        function addNonMonthlyRow() {
            const table = document.getElementById('nonMonthlyTable');
            const newRow = table.insertRow(-1);
            
            newRow.innerHTML = `
                <td><input type="text" class="nonMonthlyName" placeholder="Car Insurance, etc."></td>
                <td>
                    <select class="nonMonthlyCycle">
                        <option value="3">Quarterly (every 3 months)</option>
                        <option value="6">Semi-annually (every 6 months)</option>
                        <option value="12">Annually (once a year)</option>
                        <option value="custom">Custom</option>
                    </select>
                    <input type="number" class="customCycle hidden" min="2" placeholder="# of months">
                </td>
                <td><input type="number" class="nonMonthlyAmount" min="0" step="0.01" placeholder="0.00"></td>
                <td class="monthlyEquivalent">$0.00</td>
                <td><button class="remove-row">Remove</button></td>
            `;
            
            setupRemoveButtons();
            
            const cycleSelect = newRow.querySelector('.nonMonthlyCycle');
            cycleSelect.addEventListener('change', function() {
                const customCycleInput = this.parentNode.querySelector('.customCycle');
                if (this.value === 'custom') {
                    customCycleInput.classList.remove('hidden');
                } else {
                    customCycleInput.classList.add('hidden');
                }
                calculateBudget();
            });
            
            newRow.querySelectorAll('input, select').forEach(input => {
                input.addEventListener('change', calculateBudget);
            });
        }
        
        function calculateBudget() {
            // Get monthly income
            const monthlyIncome = parseFloat(document.getElementById('monthlyIncome').value) || 0;
            
            // Calculate total goals
            let totalGoals = 0;
            document.querySelectorAll('.goalAmount').forEach(input => {
                totalGoals += parseFloat(input.value) || 0;
            });
            
            // Calculate total monthly bills
            let totalMonthlyBills = 0;
            document.querySelectorAll('.billAmount').forEach(input => {
                totalMonthlyBills += parseFloat(input.value) || 0;
            });
            
            // Calculate total non-monthly expenses (monthly equivalent)
            let totalNonMonthly = 0;
            const nonMonthlyRows = document.querySelectorAll('#nonMonthlyTable tr:not(:first-child)');
            
            nonMonthlyRows.forEach(row => {
                const amount = parseFloat(row.querySelector('.nonMonthlyAmount').value) || 0;
                const cycleSelect = row.querySelector('.nonMonthlyCycle');
                let cycle = parseInt(cycleSelect.value);
                
                if (cycleSelect.value === 'custom') {
                    cycle = parseInt(row.querySelector('.customCycle').value) || 12;
                }
                
                const monthlyEquivalent = amount / cycle;
                totalNonMonthly += monthlyEquivalent;
                
                // Update the monthly equivalent display in the table
                row.querySelector('.monthlyEquivalent').textContent = '$' + monthlyEquivalent.toFixed(2);
            });
            
            // Calculate total fixed/recurring expenses
            const totalFixed = totalMonthlyBills + totalNonMonthly;
            
            // Calculate spending bucket
            const spendingBucket = monthlyIncome - totalGoals - totalFixed;
            
            // Calculate per-paycheck breakdown
            const payFrequency = document.getElementById('payFrequency').value;
            let paychecksPerYear;
            
            switch(payFrequency) {
                case 'weekly':
                    paychecksPerYear = 52;
                    break;
                case 'biweekly':
                    paychecksPerYear = 26;
                    break;
                case 'semimonthly':
                    paychecksPerYear = 24;
                    break;
                case 'monthly':
                    paychecksPerYear = 12;
                    break;
                default:
                    paychecksPerYear = 12;
            }
            
            const perPaycheckIncome = monthlyIncome * 12 / paychecksPerYear;
            const perPaycheckGoals = totalGoals * 12 / paychecksPerYear;
            const perPaycheckFixed = totalFixed * 12 / paychecksPerYear;
            const perPaycheckSpending = spendingBucket * 12 / paychecksPerYear;
            
            // Update the results
            document.getElementById('totalGoals').textContent = totalGoals.toFixed(2);
            document.getElementById('totalMonthlyBills').textContent = totalMonthlyBills.toFixed(2);
            document.getElementById('totalNonMonthly').textContent = totalNonMonthly.toFixed(2);
            document.getElementById('totalFixed').textContent = totalFixed.toFixed(2);
            document.getElementById('spendingBucket').textContent = spendingBucket.toFixed(2);
            
            // Update flow diagram
            document.getElementById('flowIncome').textContent = monthlyIncome.toFixed(2);
            document.getElementById('flowGoals').textContent = totalGoals.toFixed(2);
            document.getElementById('flowFixed').textContent = totalFixed.toFixed(2);
            document.getElementById('flowSpending').textContent = spendingBucket.toFixed(2);
            
            // Update per-paycheck breakdown
            document.getElementById('perPaycheckIncome').textContent = perPaycheckIncome.toFixed(2);
            document.getElementById('perPaycheckGoals').textContent = perPaycheckGoals.toFixed(2);
            document.getElementById('perPaycheckFixed').textContent = perPaycheckFixed.toFixed(2);
            document.getElementById('perPaycheckSpending').textContent = perPaycheckSpending.toFixed(2);
        }
        
        function printResults() {
            window.print();
        }
    </script>
</body>
</html>
```
